using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.IO;
using System.Windows.Forms;

namespace MegaDeskV3_GregMoody
{
    public partial class AddQuote : Form
    {
        private Form _mainMenu;

        public AddQuote(Form mainMenu)
        {
            InitializeComponent();
            _mainMenu = mainMenu; //Give me access to the form that called this one
            var materials = new List<Desk.Surface>(); //making a list of surface materials generated by the Surface enum
            materials = Enum.GetValues(typeof(Desk.Surface)).Cast<Desk.Surface>().ToList();
            surfaceMaterialComboBox.DataSource = materials;
            surfaceMaterialComboBox.SelectedIndex = 0;

        }

        private void cancelAddQuote_Click(object sender, EventArgs e)
        {
            //var mainMenu = (MainMenu)Tag;
            _mainMenu.Show();
            Close();
        }

        private void AddQuote_FormClosed(object sender, FormClosedEventArgs e)
        {
            //var mainMenu = (MainMenu)Tag;
            _mainMenu.Show();
            //Close(); --Don't need this because the form "Close()" 
            //has already been called with the push of the red x button
        }

        private void getQuoteButton_Click(object sender, EventArgs e)
        {
            //This is where the magic happens
            string name = customerNameTextBox.Text;
            int width = (int)widthUpDown.Value;
            int depth = (int)depthUpDown.Value;
            int numDrawers = (int)numDrawersUpDown.Value;
            Desk.Surface surfaceMaterial;
            int rushDays;
            DateTime quoteDate = DateTime.Now;
            try
            {
              surfaceMaterial = (Desk.Surface)(surfaceMaterialComboBox.SelectedItem); //Get the value of the surfaceMaterial string
            } catch (System.NullReferenceException)
            {
                surfaceMaterial = Desk.Surface.Pine; //Set a default value
            }

            //So, this kind of works. If they type in a value, instead of select one, it dorks it up
            try
            {
                rushDays = int.Parse(rushDaysComboBox.SelectedItem.ToString()); //Get the value of the rushdays box
            }
            catch (System.NullReferenceException)
            {
                rushDays = 3; //set a default value
            }

            //Create a desk struct and initialize it
            Desk desk = new Desk
            {
                Width = width,
                Depth = depth,
                NumDrawers = numDrawers,
                SurfaceMaterial = surfaceMaterial
            };
            
            DeskQuote newDeskQuote = new DeskQuote(desk, rushDays, name, quoteDate);

            //Write the quote to a file
            writeQuoteToFile(newDeskQuote);

            //Launch the displayQuote form
            var displayQuoteForm = new DisplayQuote(_mainMenu, newDeskQuote); //= (ViewQuote)Tag;            
            displayQuoteForm.Show();
            Close(); //close the addQuote form. The displayQuote form will take it from here. It's cool.
            _mainMenu.Hide(); //Because the close() usually shows the main menu, and I don't want it to in this case.
        }


        /* This is to write the values to hard drive.*/
        private void writeQuoteToFile(DeskQuote newDeskQuote)
        {
            DeskQuote deskQuote = newDeskQuote;
            //If the file doesn't exist
            if (!File.Exists("quotes.txt"))
            {
                using (StreamWriter sw = File.AppendText("quotes.txt"))
                {
                    var newLine = String.Format("{0},{1},{2},{3},{4},{5},{6},{7}",
                        deskQuote.custName,
                        deskQuote.quoteDate,
                        deskQuote.desk.SurfaceMaterial.ToString(),
                        deskQuote.desk.Width,
                        deskQuote.desk.Depth,
                        deskQuote.desk.NumDrawers,
                        deskQuote.rushDays,
                        deskQuote.totalCost
                        );
                    sw.WriteLine(newLine);
                }
            } else //If the file already exists
            {
                using (StreamWriter sw = File.AppendText("quotes.txt"))
                {
                    var newLine = String.Format("{0},{1},{2},{3},{4},{5},{6},{7}",
                        deskQuote.custName,
                        deskQuote.quoteDate,
                        deskQuote.desk.SurfaceMaterial.ToString(),
                        deskQuote.desk.Width,
                        deskQuote.desk.Depth,
                        deskQuote.desk.NumDrawers,
                        deskQuote.rushDays,
                        deskQuote.totalCost
                        );
                    sw.WriteLine(newLine);
                }
            }
            
        }

    }
}